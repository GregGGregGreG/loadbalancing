<?xml version="1.0" encoding="UTF-8"?>
<project name="loadbalancing" default="all" basedir=".">
  <property name="build.dir" value="out" />
  <property name="exec.dir" value="out" />
  <property name="lib.dir" value="lib" />
  <property name="report.dir" value="report" />
  <property name="junit.out" value="${report.dir}" />
  <property name="doc.dir" value="javadoc" />
  <property name="src.dir" value="src" />
  <property name="test.dir" value="src/test" />

  <path id="project.classpath" >
    <pathelement location="${build.dir}"/>
    <fileset dir="${lib.dir}" >
      <include name="*.jar"/>
    </fileset>
  </path>

  <target name="compile" description="Compiles the project">
    <mkdir dir="${build.dir}"/>
    <javac srcdir="${src.dir}" destdir="${build.dir}"
	   classpathref="project.classpath"
	   debug="true" deprecation="true"
	   includeantruntime="false"/>
  </target>
  
  <target name="run-slave" depends="compile" description="Runs a slave.">
    <echo message="Exec dir in ${exec.dir}" /> 
    <java classname="loadbalancing.slave.SlaveServer" fork="true" dir="." classpathref="project.classpath">
      <arg value="12560"/>
    </java>
  </target>

  <target name="run-loadbalancer" depends="compile" description="Runs a loadbalancer with the config file as config.xml">
    <echo message="Exec dir in ${exec.dir}" /> 
    <java classname="loadbalancing.loadbalancer.LoadBalancer" fork="true" dir="." classpathref="project.classpath">
      <arg value="5000"/>
      <arg value="config.xml"/>
    </java>
  </target>

  <target name="create-jar" description="Creates the Jar File">
    <echo message="Value!"/>
    <jar destfile="rockthenet.jar">
      <resources>
	<fileset dir="." includes="lib/*.jar"/>
      </resources>
      <fileset dir="${build.dir}"/>
      <manifest>
      </manifest>
    </jar>
  </target>

  <target name="run-client" depends="compile" description="Sends a query">
    <echo message="Exec dir in ${exec.dir}" /> 
    <java classname="loadbalancing.client.Client" fork="true" dir="." classpathref="project.classpath">
      <arg value="Gary"/>
      <arg value="http://localhost:5000/RPC2"/>
      <arg value="Boom"/>
    </java>
  </target>
  
  <target name="clean" description="Clean build products.">
    <delete dir="${build.dir}" />
  </target>
  
  <target name="rebuild" depends="clean, compile" description="Clean and build products." />
  
  <target name="test" description="run all junit tests" depends="compile">

      <!-- Debug output
	      <property name="test.class.path" refid="test.class.path"/>
	      <echo message="${test.class.path}"/>
      -->
      <echo message="${env.JAVA_HOME}"/>
      <mkdir dir="${report.dir}" />
	<junit fork="true" printsummary="yes" haltonfailure="${haltonfailure}">
	    <classpath refid="rockthenet.module.classpath"/>
	    <formatter type="xml"/>
	    <batchtest fork="yes" todir="${report.dir}">
		<fileset dir="${src.dir}">
		    <include name="**/*Test.java"/>
		</fileset>
	    </batchtest>
	</junit>
      <junitreport todir="${junit.out}">
	  <fileset dir="${junit.out}">
	      <include name="TEST-*.xml"/>
	  </fileset>
	  <report todir="${junit.out}" format="frames"/>
      </junitreport>
  </target>
  <target name="create-doc">
    <mkdir dir="${doc.dir}" />
    <javadoc sourcepath="src" destdir="${doc.dir}">
	<classpath refid="project.classpath"/>
    </javadoc>
  </target>
  <target name="clean-doc">
    <delete dir="${doc.dir}" />
    </target>

</project>
